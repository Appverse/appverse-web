
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       					   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Stateless RESTful service using JWS authentication -->
	<http pattern="/rest/**" create-session="stateless"
		entry-point-ref="http403ForbiddenEntryPoint">
		<intercept-url pattern='/**' access='IS_AUTHENTICATED_FULLY' />
		<custom-filter after="SECURITY_CONTEXT_FILTER" ref="myJWSRequestWrapper" />
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="myJWSFilter" />
	</http>

	<http auto-config='true'>
		<intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/favicon.ico" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />

		<form-login login-page='/login.jsp' />
		<logout logout-success-url="/login.jsp" />
	</http>


	<beans:bean id="myJWSRequestWrapper"
		class="org.appverse.web.framework.backend.frontfacade.rest.authentication.filter.JWSSecurityContextHolderAwareRequestFilter">

	</beans:bean>

	<beans:bean id="myJWSFilter"
		class="org.appverse.web.framework.backend.frontfacade.rest.authentication.filter.JWSAuthenticationProcessingFilter">
		<beans:constructor-arg ref="authenticationManager" />

	</beans:bean>

	<beans:bean id="http403ForbiddenEntryPoint"
		class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint" />


	<global-method-security>
		<protect-pointcut
			expression="execution(* com.db.sample.sample.backend.services.presentation..*.*(..)))"
			access="ROLE_USER" />
	</global-method-security>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="jwsAuthenticationProvider" />
		<authentication-provider user-service-ref="userService" />
	</authentication-manager>

	<!-- Authentication -->
	<beans:bean id="jwsAuthenticationProvider"
		class="org.appverse.web.framework.backend.frontfacade.rest.authentication.JWSAuthenticationProvider">
        	<beans:property name="certificatePath" value="classpath:certificates/server/client.crt"/>
		<!-- Include userDetailsService if you need 
		<beans:property name="userDetailsService"	ref="userDetailsCustom" /> -->
	</beans:bean>


	<user-service id="userService">
		<user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
		<user name="user" password="user" authorities="ROLE_USER" />
	</user-service>

	<!-- <jdbc-user-service id="jdbcUserService" data-source-ref="dataSource" -->
	<!-- authorities-by-username-query="select users.username, authorities.id 
		from users,authorities,userauthorities where username = ? and users.pk=userauthorities.userid 
		and authorities.pk=userauthorities.authority"/> -->

</beans:beans>


