#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
					       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
					       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
					       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
					       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd"
       default-autowire="byName"> 

      <!-- ============================================================================================= --> 
      <!-- Property Files                                                                                --> 
      <!-- ============================================================================================= --> 
      
      <context:property-placeholder location="classpath:properties/*.properties" />     
        
    
  	  <!-- ============================================================================================= --> 
 	  <!-- JPA ORM       							                     				                 -->
  	  <!-- ============================================================================================= --> 
      
       <bean id="entityManagerFactory"
		    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/>
		
	
 	  <!-- ============================================================================================= --> 
	  <!-- myBatis Data Mapper       		                              	       						 -->
 	  <!-- ============================================================================================= --> 
     
      <!--bean id="sqlSessionFactory"
 		    class="org.mybatis.spring.SqlSessionFactoryBean" 					
 		    p:mapperLocations="classpath:mybatis/*DataMapper.xml" p:dataSource-ref="dataSource" />
	
		 
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		    p:basePackage="${package}.services.integration"  
		    p:annotationClass="org.appverse.web.framework.backend.api.services.integration.helpers.Mapper" 				
		    p:sqlSessionFactory-ref="sqlSessionFactory" /-->
			
  	  <!-- ============================================================================================= --> 
 	  <!-- Transaction Manager		                                       						         -->
  	  <!-- ============================================================================================= --> 
       
       <bean id="transactionManager"
    	     class="org.springframework.orm.jpa.JpaTransactionManager" />


      <!-- ============================================================================================= --> 
      <!-- Dozer converter                                                        	                     --> 
      <!-- ============================================================================================= --> 
      
      <bean id="conversionService"  
      		class="org.dozer.spring.DozerBeanMapperFactoryBean"
      		p:mappingFiles="classpath*:dozer/*bean-mappings.xml"/> 


      <!-- ============================================================================================= --> 
      <!--  JSR-303 Validation                                      					                 -->
      <!-- ============================================================================================= --> 
      
      <bean id="validator" 
      		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
 

   	  <!-- ============================================================================================= --> 
      <!-- Autowired Logger BeanFactoryPostProcessor                                            	     --> 
      <!-- ============================================================================================= -->   
      
      <bean class="org.appverse.web.framework.backend.api.helpers.log.AutowiredLoggerBeanPostProcessor" />

      <!-- ============================================================================================= -->
      <!-- cache ehcache                                                                         	     -->
      <!-- ============================================================================================= -->

    <cache:annotation-driven />


    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cacheManager-ref="ehcache"/>


    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true" destroy-method="destroy">
        <property name="configLocation" value="classpath:ehcache/ehcache.xml"/>
    </bean>

    <!-- ============================================================================================= -->
    <!-- BOM                                            	     -->
    <!-- ============================================================================================= -->
    	<!--context:component-scan
		base-package="org.appverse.web.framework.backend.bpm.services.integration.impl.live" /-->

    <!-- ============================================================================================= -->
	  <!-- AOP     		                              	             						             -->
   	  <!-- ============================================================================================= -->

      <tx:advice id="txAdvice">
          <tx:attributes>
              <tx:method name="retrieve*" read-only="true" propagation="SUPPORTS"/>
              <tx:method name="search*" read-only="true" propagation="SUPPORTS"/>
              <tx:method name="*" propagation="REQUIRED"/> 
          </tx:attributes>
      </tx:advice>

      <bean id="profilingAdvice" class="org.appverse.web.framework.backend.api.aop.advices.ProfilingAdvice" /> 
      <bean id="exceptionAdvice" class="org.appverse.web.framework.backend.api.aop.advices.ExceptionAdvice" />
      <bean id="validationAdvice" class="org.appverse.web.framework.backend.api.aop.advices.ValidationAdvice"/>
      <bean id="profileManager" class="org.appverse.web.framework.backend.api.aop.managers.impl.live.ProfileManagerImpl" />
      <bean id="exceptionManager"	class="org.appverse.web.framework.backend.api.aop.managers.impl.live.ExceptionManagerImpl" />
	  <bean id="validationManager" class="org.appverse.web.framework.backend.api.aop.managers.impl.live.ValidationManagerImpl" />

      <aop:config> 
          <aop:pointcut id="allPresentationServicesMethodsCalls" expression="execution(* ${package}.services.presentation..*.*(..))"/> 
          <aop:pointcut id="allBusinessServicesMethodsCalls" expression="execution(* ${package}.services.business..*.*(..))"/>           
          <aop:pointcut id="allIntegrationServicesMethodsCalls" expression="execution(* ${package}.services.integration..*.*(..))"/> 
          <aop:pointcut id="allServicesMethodsCalls" expression="execution(* ${package}.services..*.*(..))"/> 
  	   	  <aop:pointcut id="allPresentationSaveMethodsCalls" expression="execution(* ${package}.services.presentation..save*(..))"/>
          <!--TODO check txAdvice back to allPresentationServicesMethodsCalls-->
          <aop:advisor advice-ref="txAdvice" pointcut-ref="allBusinessServicesMethodsCalls"/>
          <aop:advisor advice-ref="profilingAdvice" pointcut-ref="allServicesMethodsCalls"/>
          <aop:advisor advice-ref="exceptionAdvice" pointcut-ref="allServicesMethodsCalls"/>
          <aop:advisor advice-ref="validationAdvice" pointcut-ref="allPresentationSaveMethodsCalls"/>
      </aop:config> 
            
      <!-- ============================================================================================= --> 
      <!-- Imports and Component Scans                                                                   --> 
      <!-- ============================================================================================= -->    
	  <import resource="database-config.xml" />
	  <import resource="security-config.xml" />
      	                                                                              
      <context:component-scan  base-package="${package}.services.presentation.impl.live"/>
      <context:component-scan  base-package="${package}.services.business.impl.live"/>
      <context:component-scan  base-package="${package}.services.integration.impl.live"/>
      <context:component-scan  base-package="${package}.converters.*"/> 
      
      <context:component-scan  base-package="org.appverse.web.framework.backend.api.converters.*"/> 
	  <context:component-scan  base-package="org.appverse.web.framework.backend.api.services.presentation.impl.live"/>
	  <!--context:component-scan  base-package="org.appverse.web.framework.backend.frontfacade.gxt.converters.*"/>
	  <context:component-scan  base-package="org.appverse.web.framework.backend.frontfacade.gxt.services.*.impl.live"/-->


    <bean class="${package}.helpers.ErrorCodes">
        <property name="errorCodes">
            <props>
                <prop key="-1">${symbol_dollar}{error.code.logout.notlogged}</prop>
                <prop key="0">${symbol_dollar}{error.code.ok}</prop>
                <prop key="1">${symbol_dollar}{error.code.noresultsfound}</prop>
                <prop key="2">${symbol_dollar}{error.code.jsonerror}</prop>
                <prop key="3">${symbol_dollar}{error.code.badrequest.missingdata}</prop>
                <prop key="90">${symbol_dollar}{error.code.login.wrongcredentials}</prop>
                <prop key="91">${symbol_dollar}{error.code.login.alreadylogged}</prop>
                <prop key="92">${symbol_dollar}{error.code.logout.notlogged}</prop>
                <prop key="93">${symbol_dollar}{error.code.session.expired}</prop>
                <prop key="94">${symbol_dollar}{error.code.session.required}</prop>
                <prop key="99">${symbol_dollar}{error.code.unhandled}</prop>
            </props>
        </property>
    </bean>
                      
</beans> 