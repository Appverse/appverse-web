#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">

	<display-name>Appverse Web JSF2 Showcase</display-name>

	<!-- Necessary for Jetty server to work, for other servers / servlet containers it is not necessary -->
	<!-- http://stackoverflow.com/questions/7886035/could-not-find-factory-javax-faces-context-facescontextfactory -->
	<listener>
		<listener-class>com.sun.faces.config.ConfigureListener</listener-class>
	</listener>	
	
	<!--  Log4j Setup -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>	
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j/log4j.properties</param-value>
	</context-param>
	
	<!-- Spring listeners setup -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- Spring context config file include -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/application-config.xml</param-value>
	</context-param>
	
	<!-- Faces context initialization -->
	
	<!-- Necessary only in containers where EL 2.2 is added manually (i.e. Tomcat 6) -->
	<!-- 	Tomcat 6, for instance, requires this setup: -->
	<!-- 	http://wiki.apache.org/myfaces/HowToEnableEl22 	-->			
	<!-- 	<context-param> -->
	<!--     	<param-name>com.sun.faces.expressionFactory</param-name> -->
	<!--     	<param-value>com.sun.el.ExpressionFactoryImpl</param-value> -->
	<!--   	</context-param>	 -->
	
	<!--  RichFaces 4 Skinning setup -->
	<context-param>
		<param-name>org.richfaces.skin</param-name>
		<param-value>${symbol_pound}{skinBean.skin}</param-value>
	</context-param>
	<context-param>
		<param-name>org.richfaces.enableControlSkinning</param-name>
		<param-value>true</param-value>
	</context-param>		
	
	<!-- Specifying project stage -->
	<context-param>
		<param-name>javax.faces.PROJECT_STAGE</param-name>
		<param-value>Development</param-value>
	</context-param>
	
	<!-- Default sufix for pages containing JSF2 code -->
	<context-param>
		<param-name>javax.faces.DEFAULT_SUFFIX</param-name>
		<param-value>.xhtml</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.FACELETS_VIEW_MAPPINGS</param-name>
		<param-value>*.xhtml</param-value>
	</context-param>	
	
	<!-- Skip comments in JSF pages -->
	<context-param>
		<param-name>javax.faces.SKIP_COMMENTS</param-name>
		<param-value>true</param-value>
	</context-param>
	<context-param>
		<param-name>javax.faces.FACELETS_SKIP_COMMENTS</param-name>
		<param-value>true</param-value>
	</context-param>
		
	<!-- Spring security filters setup -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!-- StaticContentCacheFilter -->
    <filter>
        <filter-name>staticContentCacheFilter</filter-name>
        <filter-class>org.appverse.web.framework.backend.api.helpers.request.StaticContentCacheFilter</filter-class>
        <init-param>
            <!-- * means 'all' even when wilcards are disabled -->
            <param-name>match</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>nocache</param-name>
            <param-value>.nocache.</param-value>
        </init-param>
        <init-param>
            <!-- wilcards disabled -->
            <param-name>wilcards</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>staticContentCacheFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>staticContentCacheFilter</filter-name>
        <url-pattern>*.css</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>staticContentCacheFilter</filter-name>
        <url-pattern>*.js</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>staticContentCacheFilter</filter-name>
        <url-pattern>*.png</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>staticContentCacheFilter</filter-name>
        <url-pattern>*.jpg</url-pattern>
    </filter-mapping>

    <!-- Jodd GZIP filter -->
    <filter>
        <filter-name>GzipFilter</filter-name>
        <filter-class>jodd.servlet.filter.GzipFilter</filter-class>
        <init-param>
            <!-- * means 'all' even when wilcards are disabled -->
            <param-name>match</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <!-- wilcards disabled -->
            <param-name>wilcards</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>threshold</param-name>
            <param-value>128</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>*.css</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>GzipFilter</filter-name>
        <url-pattern>*.js</url-pattern>
    </filter-mapping>


    <!-- Faces Servlet mappings -->

	<!-- http://www.imixs.org/roller/ralphsjavablog/entry/jsf_2_0_could_not 
		To avoid this error message it you should add the listener "com.sun.faces.config.ConfigureListener" 
		into the web.xml. But you will still see the error message again if your 
		FacesServlet has the load-on-startup option "1". This option will avoid that 
		the ConfigureListern is loaded before the FacesServlet starts. -->
	<servlet>
		<servlet-name>Faces Servlet</servlet-name>
		<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.xhtml</url-pattern>
	</servlet-mapping>	

	<servlet-mapping>
		<servlet-name>Faces Servlet</servlet-name>
		<url-pattern>*.jsf</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>welcome.xhtml</welcome-file>
	</welcome-file-list>
	
	<security-constraint>
		<display-name>Restrict raw HTML Documents</display-name>
		<web-resource-collection>
			<web-resource-name>HTML</web-resource-name>
			<url-pattern>*.html</url-pattern>
		</web-resource-collection>
		<auth-constraint />
	</security-constraint>	

	<!-- Server side automatically handled errors -->
<!-- 	<error-page> -->
<!-- 		<error-code>403</error-code> -->
<!-- 		<location>/errorPages/error403.xhtml</location> -->
<!-- 	</error-page> -->
<!-- 	<error-page> -->
<!-- 		<error-code>404</error-code> -->
<!-- 		<location>/errorPages/error404.xhtml</location> -->
<!-- 	</error-page> -->
<!-- 	<error-page> -->
<!-- 		<error-code>503</error-code> -->
<!-- 		<location>/errorPages/error503.xhtml</location> -->
<!-- 	</error-page> -->
<!-- 	<error-page> -->
<!-- 		<error-code>505</error-code> -->
<!-- 		<location>/errorPages/error505.xhtml</location> -->
<!-- 	</error-page> -->

</web-app>