#set($dollar = '$')
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
        
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<packaging>war</packaging>

	<name>${newProjectName}</name>
    <description>${newProjectName}</description>


    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.richfaces.bom.version>4.3.0.Final</org.richfaces.bom.version>
        <appverse.framework.version>1.4-RELEASE</appverse.framework.version>
        <appverse.ddl-generator.version>1.4-RELEASE</appverse.ddl-generator.version>
		<app.context.root>${project.artifactId}</app.context.root>
	</properties>

    <licenses>
        <license>
            <name>Your license</name>
            <url>your license URL</url>
            <distribution>your distribution repo</distribution>
            <comments>
                Add comments here
            </comments>
        </license>
    </licenses>

    <organization>
        <name>Your organization</name>
        <url>Your organization URL</url>
    </organization>

    <developers>
        <developer>
            <id>developerid</id>
            <name>Developer Name</name>
            <email>Developer email</email>
            <url/>
            <organization>Developer organization</organization>
            <organizationUrl>Developer organization URL</organizationUrl>
            <roles>
                <role>Developer role</role>
            </roles>
            <timezone>Developer timezone</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Contributor Name</name>
            <email>Contributor Email</email>
            <url/>
            <organization>Contributor organization</organization>
            <organizationUrl>Contributor organization URL</organizationUrl>
            <roles>
                <role>Contributor Role</role>
            </roles>
            <timezone>Contributor timezone</timezone>
        </contributor>
    </contributors>

    <issueManagement>
        <system>Your issue management system</system>
        <url>Your issue management system URL</url>
    </issueManagement>

    <ciManagement>
        <system>Your continuos integration management system</system>
        <url>Your continuos integration management system URL</url>
    </ciManagement>


    <scm>
        <connection>Your SCM connection</connection>
        <developerConnection>Developer connection</developerConnection>
        <tag>master</tag>
        <url>URL</url>
    </scm>


	<build>
		<!-- Default Maven goal uses embedded Jetty server -->
		<defaultGoal>clean jetty:run-war</defaultGoal>

		<!-- If you want your default goal to deploy the application in a external 
			Tomcat 7 server, uncomment the previous line and comment this one -->
		<!-- <defaultGoal>clean package tomcat7:deploy-only</defaultGoal> -->

		<filters>
			<filter>src/main/filters/${env}.properties</filter>
		</filters>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
						<showWarnings>true</showWarnings>
						<showDeprecated>true</showDeprecated>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.7.2</version>
					<configuration>
						<maven.test.skip>${skip.tests}</maven.test.skip>
						<includes>
							<include>**/*.java</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<includeEmptyDirs>true</includeEmptyDirs>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>jasper</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>2.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tomcat-maven-plugin</artifactId>
					<version>1.0</version>
					<configuration>
						<username>${tomcat.manager.username}</username>
						<password>${tomcat.manager.password}</password>
						<url>${tomcat.manager.url}</url>
						<update>true</update>
						<fork>true</fork>
						<path>/${app.context.root}</path>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.1</version>
					<configuration>
						<!-- Please take into account you need to define the following variables 
							accordingly to your Tomcat 7 setup in an active Maven profile. Example: <properties> 
							<tomcat.manager.username>admin</tomcat.manager.username> <tomcat.manager.password>admin</tomcat.manager.password> 
							<tomcat.manager.url>http://localhost:8080/manager/text/deploy</tomcat.manager.url> 
							</properties> -->
						<username>${tomcat.manager.username}</username>
						<password>${tomcat.manager.password}</password>
						<server>tomcat</server>
						<path>/${app.context.root}</path>
						<url>${tomcat.manager.url}</url>
						<update>true</update>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<plugin>
					<groupId>org.appverse.web.tools.jpaddlgenerator</groupId>
					<artifactId>appverse-web-tools-jpa-ddl-generator</artifactId>
					<version>${appverse.ddl-generator.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate-schema</goal>
							</goals>
                            <phase>compile</phase>
							<configuration>
								<ddlOutputDir>${dollar}{basedir}/src/main/resources/sql</ddlOutputDir>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.appverse.web.framework.modules.backend.core.persistence.eclipselink</groupId>
							<artifactId>appverse-web-modules-backend-core-persistence-eclipselink</artifactId>
							<version>${appverse.framework.version}</version>
						</dependency>
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>native2ascii</goal>
							</goals>
							<configuration>
								<src>${dollar}{basedir}/src/main/resources</src>
								<dest>target/${project.artifactId}-${project.version}/WEB-INF/classes</dest>
								<encoding>UTF8</encoding>
								<includes>
									<include>**/*.properties</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<configuration>
						<webAppConfig>
							<contextPath>/${app.context.root}</contextPath>
						</webAppConfig>
						<webAppSourceDirectory>${dollar}{basedir}/src/main/webapp</webAppSourceDirectory>
						<webXml>${dollar}{basedir}/src/main/webapp/WEB-INF/web.xml</webXml>
						<classesDirectory>target/${project.artifactId}-${project.version}/WEB-INF/classes</classesDirectory>
						<reload>automatic</reload>
						<scanIntervalSeconds>2</scanIntervalSeconds>
						<scanTargets>
							<scanTarget>src/main</scanTarget>
						</scanTargets>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/resources</directory>
								<includes>
									<include>**/*.xml</include>
									<include>**/*.properties</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.appverse.web.tools.jpaddlgenerator</groupId>
				<artifactId>appverse-web-tools-jpa-ddl-generator</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Appverse dependencies (BOM) -->
			<dependency>
				<groupId>org.appverse.web.framework.poms</groupId>
				<artifactId>appverse-web-masterpom</artifactId>
				<version>${appverse.framework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- JSF2 richfaces dependencies (BOM) -->
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${org.richfaces.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.appverse.web.framework.modules.backend.core.api</groupId>
			<artifactId>appverse-web-modules-backend-core-api</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.appverse.web.framework.modules.backend.core.persistence.eclipselink</groupId>
			<artifactId>appverse-web-modules-backend-core-persistence-eclipselink</artifactId>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.appverse.web.framework.modules.backend.core.ws</groupId>
			<artifactId>appverse-web-modules-backend-core-ws</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSF2 dependencies -->
		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-components-ui</artifactId>
		</dependency>
		<dependency>
			<groupId>org.richfaces.core</groupId>
			<artifactId>richfaces-core-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>javax.faces-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- EL 2.2 is necessary to use all JSF2 features. For instance, EL 2.2 allows passing arguments in EL expressions -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>el-api</artifactId>
 			<scope>provided</scope>
 			<version>2.2</version>
		</dependency>
		
		<!-- Necessary in not full compliant JavaEE 6 containers that do not provide 
			this version. Calls over beans with parameters would raise a parsing error. 
			Read this http://www.mkyong.com/jsf2/how-to-pass-parameters-in-method-expression-jsf-2-0/ 
			http://stackoverflow.com/questions/2333605/using-el-2-2-with-tomcat-6-0-24 -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<scope>provided</scope>
			<version>2.2</version>
		</dependency>		

	</dependencies>

	<profiles>
		<!-- local development profile example -->
		<profile>
			<id>development</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<!-- Overriding Appverse Web scope as we use it as well for local development -->
			<dependencies>
				<dependency>
					<groupId>org.hsqldb</groupId>
					<artifactId>hsqldb</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
			<properties>
				<env>development</env>
			</properties>
		</profile>
		<!-- integration (production-like) profile example -->
		<profile>
			<id>integration</id>
			<activation>
			</activation>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.appverse.web.tools.jpaddlgenerator</groupId>
						<artifactId>appverse-web-tools-jpa-ddl-generator</artifactId>
						<configuration>
							<targetDbPlatform>MySQLPlatform</targetDbPlatform>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<env>integration</env>
			</properties>
		</profile>

		<!-- Define here your required profiles, for instance for production envirom -->
	</profiles>

</project>
