package org.appverse.web.showcases.jsf2showcase.frontend.jsf2.helpers;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Iterator;

import javax.faces.FacesException;
import javax.faces.application.NavigationHandler;
import javax.faces.context.ExceptionHandler;
import javax.faces.context.ExceptionHandlerWrapper;
import javax.faces.context.FacesContext;
import javax.faces.event.ExceptionQueuedEvent;
import javax.faces.event.ExceptionQueuedEventContext;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CustomExceptionHandler extends ExceptionHandlerWrapper {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	private ExceptionHandler exceptionHandler;

	public CustomExceptionHandler(ExceptionHandler exceptionHandler) {
		this.exceptionHandler = exceptionHandler;
	}

	@Override
	public ExceptionHandler getWrapped() {
		return this.exceptionHandler;
	}

	public void handle() throws FacesException {
		for (Iterator<ExceptionQueuedEvent> i = getUnhandledExceptionQueuedEvents()
				.iterator(); i.hasNext();) {
			FacesContext facesContext = FacesContext.getCurrentInstance();
			NavigationHandler navigationHandler = facesContext.getApplication()
					.getNavigationHandler();
			ExceptionQueuedEvent exceptionQueuedEvent = i.next();
			ExceptionQueuedEventContext exceptionQueuedEventContext = (ExceptionQueuedEventContext) exceptionQueuedEvent
					.getSource();
			Throwable t = exceptionQueuedEventContext.getException();

			// Get stacktrace
			Writer stacktraceWriter = new StringWriter();
			PrintWriter printWriter = new PrintWriter(stacktraceWriter);
			t.printStackTrace(printWriter);
			// Print stacktrace in logs
			logger.error(stacktraceWriter.toString());
			
			// Get the original cause
			Throwable originalCause = t;
			while (originalCause.getCause() != null){
				originalCause = originalCause.getCause();
			}			
			
			if (t instanceof javax.faces.FacesException) {
				// Treatment for the different kinds of FacesException.
				// Complete here your custom exception handling
				if (originalCause instanceof com.sun.faces.context.FacesFileNotFoundException) {
					// Example: We treat FacesFileNotFoundException as a 404 http error
					navigationHandler.handleNavigation(facesContext, null, "facesNotFound");
				}else if (originalCause instanceof javax.xml.ws.http.HTTPException) {
					// Example: for WS not responding we redirect to a 503 (serviceUnavailable) screen
					navigationHandler.handleNavigation(facesContext, null, "serviceUnavailable");
				} else {
					// Example: Any other faces Exception. In this case we shown a generic error page with the original cause and the stacktrace
					facesContext.getExternalContext().getFlash().put("error", stacktraceWriter.toString());
					if (originalCause != null) {
						facesContext.getExternalContext().getFlash().put("cause", originalCause.getMessage());
					}
					navigationHandler.handleNavigation(facesContext, null,
							"/applicationError");
				}
			} else {
					// Example: Treatment for non FacesException. In this case we shown a generic error page with the original cause and the stacktrace				
					facesContext.getExternalContext().getFlash().put("error", stacktraceWriter.toString());
					if (originalCause != null) {
						facesContext.getExternalContext().getFlash().put("cause", originalCause.getMessage());
					}
					navigationHandler.handleNavigation(facesContext, null,
						"/applicationError");
			}
			i.remove();
		}
		getWrapped().handle();
	}
}